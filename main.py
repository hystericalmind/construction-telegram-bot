import logging
import os
import sys
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler
from config import BOT_TOKEN
import handlers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler(sys.stdout)
    ]
)
logger = logging.getLogger(__name__)


def error_handler(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ update {update}: {context.error}', exc_info=context.error)


def setup_handlers(application):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", handlers.start))
    application.add_handler(CommandHandler("add_user", handlers.add_user_command))
    application.add_handler(CommandHandler("remove_user", handlers.remove_user_command))
    application.add_handler(CommandHandler("rename_user", handlers.rename_user_command))
    application.add_handler(CommandHandler("cancel", handlers.cancel))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    application.add_handler(MessageHandler(
        filters.Regex(r'^/approve_[\w\.]+$'),
        handlers.approve_data_command
    ))
    application.add_handler(MessageHandler(
        filters.Regex(r'^/reject_[\w\.]+$'),
        handlers.reject_data_command
    ))

    # –û—Å–Ω–æ–≤–Ω–æ–π ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç
    add_work_conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex('^(üìä –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É)$'), handlers.handle_message)
        ],
        states={
            handlers.GETTING_PROJECT_FOR_WORK: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_project_for_work)
            ],
            handlers.GETTING_DATE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_date)
            ],
            handlers.GETTING_WORKER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_worker)
            ],
            handlers.GETTING_OBJECT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_object)
            ],
            handlers.GETTING_WORK_TYPE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_work_type)
            ],
            handlers.GETTING_VOLUME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_volume)
            ],
            handlers.GETTING_NOTES: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_notes)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", handlers.cancel),
            MessageHandler(filters.Regex('^(üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)$'), handlers.back_to_main_menu)
        ]
    )

    # ConversationHandler –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏
    project_conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex('^(‚ûï –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç|üìà –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç|üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ|üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç)$'),
                           handlers.handle_message)
        ],
        states={
            handlers.GETTING_PROJECT_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.create_project_handler)
            ],
            handlers.GETTING_REPORT_PROJECT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_report_project)
            ],
            handlers.VIEW_PROJECT_DATA: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.view_project_data)
            ],
            handlers.GETTING_DELETE_PROJECT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.delete_project_handler)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", handlers.cancel),
            MessageHandler(filters.Regex('^(üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)$'), handlers.back_to_main_menu)
        ]
    )

    # ConversationHandler –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞–º
    worker_report_conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex('^(üë∑ –û—Ç—á–µ—Ç –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É)$'), handlers.handle_message)
        ],
        states={
            handlers.GETTING_WORKER_REPORT_PROJECT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_worker_report_project)
            ],
            handlers.GETTING_WORKER_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_worker_name)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", handlers.cancel),
            MessageHandler(filters.Regex('^(üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)$'), handlers.back_to_main_menu)
        ]
    )

    # ConversationHandler –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    users_conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex('^(üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏)$'), handlers.handle_message)
        ],
        states={
            handlers.GETTING_RENAME_USER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.get_user_to_rename)
            ],
            handlers.GETTING_NEW_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handlers.rename_user_handler)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", handlers.cancel),
            MessageHandler(filters.Regex('^(üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)$'), handlers.back_to_main_menu)
        ]
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ ConversationHandler
    application.add_handler(add_work_conv_handler)
    application.add_handler(project_conv_handler)
    application.add_handler(worker_report_conv_handler)
    application.add_handler(users_conv_handler)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    application.add_handler(MessageHandler(
        filters.Regex('^(üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞|üë§ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è|‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)$'),
        handlers.manage_users
    ))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É"
    application.add_handler(MessageHandler(
        filters.Regex('^(üìã –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É)$'),
        handlers.handle_message
    ))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    application.add_handler(MessageHandler(
        filters.Regex('^(üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)$'),
        handlers.back_to_main_menu
    ))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∞–≤—Ç–æ-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ)
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND,
        handlers.handle_message
    ))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not BOT_TOKEN or BOT_TOKEN == 'your_telegram_bot_token_here':
            print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
            print("üí° –û—Ç–∫—Ä–æ–π—Ç–µ .env –∏ –∑–∞–º–µ–Ω–∏—Ç–µ your_telegram_bot_token_here –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
            return

        # –°–æ–∑–¥–∞–µ–º application (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è python-telegram-bot)
        application = Application.builder().token(BOT_TOKEN).build()

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        setup_handlers(application)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ PythonAnywhere...")
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print("üì± –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ polling")

        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        application.run_polling()

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()