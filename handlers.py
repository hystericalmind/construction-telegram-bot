# -*- coding: utf-8 -*-
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ConversationHandler, MessageHandler, Filters, CallbackContext, CommandHandler
from config import ADMIN_ID
import auth
import gspread
from google.oauth2.service_account import Credentials
from config import SERVICE_ACCOUNT_FILE, SCOPES, MAIN_SPREADSHEET_ID
from datetime import datetime
import re


# ‚ö†Ô∏è –≠–ö–°–¢–†–ï–ù–ù–´–ô –§–ò–ö–° - –°–û–ó–î–ê–ï–ú –ú–ï–¢–û–î–´ –ü–†–Ø–ú–û –ó–î–ï–°–¨ ‚ö†Ô∏è
def emergency_get_project_report(project_name):
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è get_project_report"""
    try:
        creds = Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_key(MAIN_SPREADSHEET_ID)
        worksheet = spreadsheet.worksheet(project_name)

        data = worksheet.get_all_values()
        if len(data) <= 1:
            return True, f"üìä –ü—Ä–æ–µ–∫—Ç: {project_name}\n\n–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞"

        total_records = len(data) - 1
        return True, f"üìä –û–¢–ß–ï–¢ –ü–û –ü–†–û–ï–ö–¢–£: {project_name}\n\nüìã –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_records}\n\n‚úÖ –û—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!"

    except Exception as e:
        return False, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}"


def emergency_get_all_workers_in_project(project_name):
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è get_all_workers_in_project"""
    try:
        creds = Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_key(MAIN_SPREADSHEET_ID)
        worksheet = spreadsheet.worksheet(project_name)

        data = worksheet.get_all_values()
        workers = set()

        for row in data[1:]:
            if len(row) > 1 and row[1]:
                workers.add(row[1])

        return sorted(list(workers))

    except Exception as e:
        return ["–ú–æ–Ω—Ç–∞–∂–Ω–∏–∫ 1", "–ú–æ–Ω—Ç–∞–∂–Ω–∏–∫ 2"]  # –ó–∞–≥–ª—É—à–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ


def emergency_get_worker_detailed_report(project_name, worker_name):
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è get_worker_detailed_report"""
    return True, f"üë∑ –û–¢–ß–ï–¢ –ü–û –ú–û–ù–¢–ê–ñ–ù–ò–ö–£: {worker_name}\nüìä –ü—Ä–æ–µ–∫—Ç: {project_name}\n\n‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º gsheets_manager –∏ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–µ–º –º–µ—Ç–æ–¥—ã
try:
    import gsheets_manager as gsheets

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º –º–µ—Ç–æ–¥—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if not hasattr(gsheets, 'get_project_report'):
        gsheets.get_project_report = emergency_get_project_report
        print("üÜò –°–æ–∑–¥–∞–Ω emergency get_project_report")

    if not hasattr(gsheets, 'get_all_workers_in_project'):
        gsheets.get_all_workers_in_project = emergency_get_all_workers_in_project
        print("üÜò –°–æ–∑–¥–∞–Ω emergency get_all_workers_in_project")

    if not hasattr(gsheets, 'get_worker_detailed_report'):
        gsheets.get_worker_detailed_report = emergency_get_worker_detailed_report
        print("üÜò –°–æ–∑–¥–∞–Ω emergency get_worker_detailed_report")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ gsheets_manager: {e}")


    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –º–æ–¥—É–ª—è
    class EmergencyGSheets:
        get_project_report = staticmethod(emergency_get_project_report)
        get_all_workers_in_project = staticmethod(emergency_get_all_workers_in_project)
        get_worker_detailed_report = staticmethod(emergency_get_worker_detailed_report)
        get_all_projects = staticmethod(lambda: [])
        add_work_record = staticmethod(lambda *args: True)


    gsheets = EmergencyGSheets()
# ‚ö†Ô∏è –ö–û–ù–ï–¶ –≠–ö–°–¢–†–ï–ù–ù–û–ì–û –§–ò–ö–°–ê ‚ö†Ô∏è

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(
    GETTING_DATE, GETTING_WORKER, GETTING_OBJECT,
    GETTING_WORK_TYPE, GETTING_VOLUME, GETTING_NOTES,
    GETTING_PROJECT_NAME, GETTING_REPORT_PROJECT, VIEW_PROJECT_DATA,
    GETTING_RENAME_USER, GETTING_NEW_NAME, GETTING_DELETE_PROJECT,
    GETTING_WORKER_REPORT_PROJECT, GETTING_WORKER_NAME,
    GETTING_PROJECT_FOR_WORK
) = range(15)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
pending_approvals = {}


def main_menu_keyboard(is_admin=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = [
        ['üìä –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É', 'üìà –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç'],
        ['üìã –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É', '‚ûï –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç'],
        ['üë∑ –û—Ç—á–µ—Ç –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É']
    ]
    if is_admin:
        keyboard.append(['üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç'])
        keyboard.append(['üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ'])
    keyboard.append(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def create_numeric_keyboard(items, include_back=True):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏"""
    keyboard = []

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏
    for i in range(0, len(items), 2):
        row = []
        if i < len(items):
            row.append(f"{i + 1}. {items[i]}")
        if i + 1 < len(items):
            row.append(f"{i + 2}. {items[i + 1]}")
        if row:
            keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    if include_back:
        keyboard.append(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])

    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def extract_number_from_text(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–º–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: '1. –ü—Ä–æ–µ–∫—Ç1' -> 1)"""
    match = re.match(r'^(\d+)\.', text.strip())
    if match:
        return int(match.group(1))
    return None


def back_to_main_menu(update, context):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user = update.effective_user
    update.message.reply_text(
        "üè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_menu_keyboard(auth.is_admin(user.id))
    )
    context.user_data.clear()
    return ConversationHandler.END


def start(update, context):
    user = update.effective_user
    user_id = user.id
    username = user.username or user.first_name

    if not auth.is_user_allowed(user_id, username):
        update.message.reply_text(
            "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
            "–ï—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /add_user @{}".format(username)
        )
        return

    welcome_text = "üë∑ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {}!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:".format(user.first_name)
    if auth.is_admin(user_id):
        welcome_text += "\n\nüëë –í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"

    update.message.reply_text(welcome_text, reply_markup=main_menu_keyboard(auth.is_admin(user_id)))


def handle_message(update, context):
    user = update.effective_user
    text = update.message.text

    if not auth.is_user_allowed(user.id, user.username or user.first_name):
        update.message.reply_text("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")
        return ConversationHandler.END

    if text == 'üìä –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É':
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
        projects = gsheets.get_all_projects()
        if not projects:
            update.message.reply_text(
                "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç.",
                reply_markup=main_menu_keyboard(auth.is_admin(user.id))
            )
            return ConversationHandler.END

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
        project_names = [project['name'] for project in projects]
        reply_markup = create_numeric_keyboard(project_names)

        project_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(project_names)])

        update.message.reply_text(
            f"üìÅ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã:\n\n{project_list}\n\n"
            f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
            reply_markup=reply_markup
        )
        return GETTING_PROJECT_FOR_WORK

    elif text == 'üìà –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç':
        projects = gsheets.get_all_projects()
        if not projects:
            update.message.reply_text("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.",
                                      reply_markup=main_menu_keyboard(auth.is_admin(user.id)))
            return ConversationHandler.END

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
        project_names = [project['name'] for project in projects]
        reply_markup = create_numeric_keyboard(project_names)

        project_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(project_names)])

        update.message.reply_text(
            f"üìä –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –æ—Ç—á–µ—Ç–∞:\n\n{project_list}\n\n"
            f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
            reply_markup=reply_markup
        )
        return GETTING_REPORT_PROJECT

    elif text == 'üë∑ –û—Ç—á–µ—Ç –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É':
        projects = gsheets.get_all_projects()
        if not projects:
            update.message.reply_text("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.",
                                      reply_markup=main_menu_keyboard(auth.is_admin(user.id)))
            return ConversationHandler.END

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
        project_names = [project['name'] for project in projects]
        reply_markup = create_numeric_keyboard(project_names)

        project_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(project_names)])

        update.message.reply_text(
            f"üë∑ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –æ—Ç—á–µ—Ç–∞ –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É:\n\n{project_list}\n\n"
            f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
            reply_markup=reply_markup
        )
        return GETTING_WORKER_REPORT_PROJECT

    elif text == 'üìã –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É':
        projects = gsheets.get_all_projects()
        if not projects:
            update.message.reply_text("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.",
                                      reply_markup=main_menu_keyboard(auth.is_admin(user.id)))
            return ConversationHandler.END

        if len(projects) == 1:
            # –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –æ–¥–∏–Ω, —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
            project = projects[0]
            update.message.reply_text(
                f"üìã –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–∞ '{project['name']}':\n{project['url']}",
                reply_markup=main_menu_keyboard(auth.is_admin(user.id))
            )
        else:
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
            project_names = [project['name'] for project in projects]
            reply_markup = create_numeric_keyboard(project_names)

            project_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(project_names)])

            update.message.reply_text(
                f"üìã –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã:\n\n{project_list}\n\n"
                f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
                reply_markup=reply_markup
            )
            return GETTING_REPORT_PROJECT

    elif text == '‚ûï –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç' and auth.is_admin(user.id):
        update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:",
            reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
        )
        return GETTING_PROJECT_NAME

    elif text == 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç' and auth.is_admin(user.id):
        projects = gsheets.get_all_projects()
        if not projects:
            update.message.reply_text("–ù–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.",
                                      reply_markup=main_menu_keyboard(auth.is_admin(user.id)))
            return ConversationHandler.END

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
        project_names = [project['name'] for project in projects]
        reply_markup = create_numeric_keyboard(project_names)

        project_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(project_names)])

        update.message.reply_text(
            f"üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n{project_list}\n\n"
            f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
            reply_markup=reply_markup
        )
        return GETTING_DELETE_PROJECT

    elif text == 'üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏' and auth.is_admin(user.id):
        users = gsheets.get_all_users()
        if not users:
            users_list = "–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        else:
            users_list = "\n".join(
                ["ID: {} | @{} -> {}".format(u['user_id'], u['username'], u['full_name']) for u in users])

        keyboard = [
            ['üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞'],
            ['üë§ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'],
            ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        update.message.reply_text(
            "üìã –¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n{}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:".format(users_list),
            reply_markup=reply_markup
        )

    elif text == 'üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ' and auth.is_admin(user.id):
        projects = gsheets.get_all_projects()
        if not projects:
            update.message.reply_text("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.",
                                      reply_markup=main_menu_keyboard(auth.is_admin(user.id)))
            return ConversationHandler.END

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
        project_names = [project['name'] for project in projects]
        reply_markup = create_numeric_keyboard(project_names)

        project_list = "\n".join([f"{i + 1}. {name}" for i, name in enumerate(project_names)])

        update.message.reply_text(
            f"üëÄ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:\n\n{project_list}\n\n"
            f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
            reply_markup=reply_markup
        )
        return VIEW_PROJECT_DATA

    elif text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    else:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        return auto_detect_data(update, context)

    return ConversationHandler.END


def get_project_for_work(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    projects = gsheets.get_all_projects()
    if not projects:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.")
        return ConversationHandler.END

    try:
        # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞
        project_number = extract_number_from_text(text)
        if project_number is None:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä, –∏—â–µ–º –ø–æ –∏–º–µ–Ω–∏
            project_name = text.strip()
            project = next((p for p in projects if p['name'] == project_name), None)
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            project_index = project_number - 1
            if 0 <= project_index < len(projects):
                project = projects[project_index]
            else:
                project = None

        if project:
            context.user_data['selected_project'] = project
            update.message.reply_text(
                f"‚úÖ –í—ã–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç: {project['name']}\n\n"
                f"üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç:",
                reply_markup=ReplyKeyboardMarkup([['üìÖ –°–µ–≥–æ–¥–Ω—è'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
            )
            return GETTING_DATE
        else:
            update.message.reply_text(
                "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:",
                reply_markup=create_numeric_keyboard([p['name'] for p in projects])
            )
            return GETTING_PROJECT_FOR_WORK

    except Exception as e:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
            reply_markup=create_numeric_keyboard([p['name'] for p in projects])
        )
        return GETTING_PROJECT_FOR_WORK


def auto_detect_data(update, context):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    text = update.message.text
    user = update.effective_user

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if text.startswith('/') or len(text) < 10:
        return ConversationHandler.END

    # –ü–æ–∏—Å–∫ —á–∏—Å–µ–ª (–æ–±—ä–µ–º —Ä–∞–±–æ—Ç)
    volume_match = re.search(r'(\d+[,.]?\d*)', text.replace(' ', ''))
    if not volume_match:
        return ConversationHandler.END

    volume = float(volume_match.group(1).replace(',', '.'))

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –≤–∏–¥ —Ä–∞–±–æ—Ç
    work_type = re.sub(r'\d+[,.]?\d*', '', text).strip()

    if len(work_type) < 3:  # –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        return ConversationHandler.END

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    projects = gsheets.get_all_projects()
    if not projects:
        update.message.reply_text("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.")
        return ConversationHandler.END

    pending_data = {
        'user_id': user.id,
        'username': user.username or user.first_name,
        'work_type': work_type,
        'volume': volume,
        'text': text,
        'date': datetime.now().strftime("%Y-%m-%d")
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è
    approval_id = f"{user.id}_{datetime.now().timestamp()}"
    pending_approvals[approval_id] = pending_data

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
    admin_message = (
        f"üÜï –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:\n\n"
        f"üë§ –û—Ç: {user.first_name} (@{user.username or 'N/A'})\n"
        f"üìÖ –î–∞—Ç–∞: {pending_data['date']}\n"
        f"üîß –í–∏–¥ —Ä–∞–±–æ—Ç: {work_type}\n"
        f"üìè –û–±—ä–µ–º: {volume}\n"
        f"üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}\n\n"
        f"‚úÖ –î–æ–±–∞–≤–∏—Ç—å? /approve_{approval_id}\n"
        f"‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å? /reject_{approval_id}"
    )

    context.bot.send_message(ADMIN_ID, admin_message)

    update.message.reply_text(
        "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. "
        "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã.",
        reply_markup=main_menu_keyboard(auth.is_admin(user.id))
    )

    return ConversationHandler.END


def get_date(update, context):
    text = update.message.text

    if text == 'üìÖ –°–µ–≥–æ–¥–Ω—è':
        work_date = datetime.now().strftime("%Y-%m-%d")
        context.user_data['work_date'] = work_date
        update.message.reply_text(
            f"‚úÖ –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {work_date}\n\nüë∑ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞:",
            reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
        )
        return GETTING_WORKER

    elif text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –¥–∞—Ç—É –≤—Ä—É—á–Ω—É—é
        try:
            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç—ã
            date_input = text.strip()
            if '.' in date_input:
                day, month, year = map(int, date_input.split('.'))
                work_date = datetime(year, month, day).strftime("%Y-%m-%d")
            elif '-' in date_input:
                work_date = datetime.strptime(date_input, "%Y-%m-%d").strftime("%Y-%m-%d")
            else:
                raise ValueError

            context.user_data['work_date'] = work_date
            update.message.reply_text(
                f"‚úÖ –î–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {work_date}\n\nüë∑ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞:",
                reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
            )
            return GETTING_WORKER

        except (ValueError, AttributeError):
            update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ 'üìÖ –°–µ–≥–æ–¥–Ω—è':",
                reply_markup=ReplyKeyboardMarkup([['üìÖ –°–µ–≥–æ–¥–Ω—è'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
            )
            return GETTING_DATE


def get_worker(update, context):
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    worker_name = text.strip()
    context.user_data['worker'] = worker_name

    update.message.reply_text(
        "üèóÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:",
        reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
    )
    return GETTING_OBJECT


def get_object(update, context):
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    object_name = text.strip()
    context.user_data['object'] = object_name

    update.message.reply_text(
        "üîß –í–≤–µ–¥–∏—Ç–µ –≤–∏–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã:",
        reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
    )
    return GETTING_WORK_TYPE


def get_work_type(update, context):
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    work_type = text.strip()
    context.user_data['work_type'] = work_type

    update.message.reply_text(
        "üìè –í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç (—á–∏—Å–ª–æ):",
        reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
    )
    return GETTING_VOLUME


def get_volume(update, context):
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    try:
        volume = float(text.strip())
        context.user_data['volume'] = volume

        keyboard = [['‚ùå –ù–µ—Ç', 'üìù –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        update.message.reply_text(
            "üìù –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ?",
            reply_markup=reply_markup
        )
        return GETTING_NOTES

    except ValueError:
        update.message.reply_text(
            "‚ùå –û–±—ä–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –í–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:",
            reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
        )
        return GETTING_VOLUME


def get_notes(update, context):
    text = update.message.text

    if text == '‚ùå –ù–µ—Ç':
        notes = ''
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∑–∞–ø–∏—Å–∏
        return add_work_record_final(update, context, notes)

    elif text == 'üìù –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ':
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        update.message.reply_text(
            "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ:",
            reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
        )
        # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ GETTING_NOTES, –Ω–æ —Ç–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥
        return GETTING_NOTES

    elif text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ç–µ–∫—Å—Ç –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
        notes = text.strip()
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∑–∞–ø–∏—Å–∏
        return add_work_record_final(update, context, notes)


def add_work_record_final(update, context, notes):
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å –ø—Ä–∏–º–µ—á–∞–Ω–∏—è–º–∏"""
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ context
    work_date = context.user_data.get('work_date')
    worker = context.user_data.get('worker')
    object_name = context.user_data.get('object')
    work_type = context.user_data.get('work_type')
    volume = context.user_data.get('volume')
    project = context.user_data.get('selected_project')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
    if not all([work_date, worker, object_name, work_type, volume, project]):
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
        )
        context.user_data.clear()
        return ConversationHandler.END

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
    success = gsheets.add_work_record(
        project['spreadsheet_id'],
        work_date,
        worker,
        object_name,
        work_type,
        volume,
        notes
    )

    if success:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        confirmation = "‚úÖ –†–∞–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n"
        confirmation += f"üìÅ –ü—Ä–æ–µ–∫—Ç: {project['name']}\n"
        confirmation += f"üìÖ –î–∞—Ç–∞: {work_date}\n"
        confirmation += f"üë∑ –ú–æ–Ω—Ç–∞–∂–Ω–∏–∫: {worker}\n"
        confirmation += f"üèóÔ∏è –û–±—ä–µ–∫—Ç: {object_name}\n"
        confirmation += f"üîß –í–∏–¥ —Ä–∞–±–æ—Ç: {work_type}\n"
        confirmation += f"üìè –û–±—ä–µ–º: {volume}\n"
        if notes:
            confirmation += f"üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: {notes}\n"

        update.message.reply_text(
            confirmation,
            reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
        )
    else:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã.",
            reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
        )

    context.user_data.clear()
    return ConversationHandler.END


def create_project_handler(update, context):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    project_name = text.strip()
    user = update.effective_user

    project = gsheets.create_new_project(project_name, user.username or user.first_name)

    if project:
        update.message.reply_text(
            "‚úÖ –ü—Ä–æ–µ–∫—Ç '{}' —Å–æ–∑–¥–∞–Ω!\n–°—Å—ã–ª–∫–∞: {}".format(project_name, project['url']),
            reply_markup=main_menu_keyboard(auth.is_admin(user.id))
        )
    else:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.",
            reply_markup=main_menu_keyboard(auth.is_admin(user.id))
        )

    return ConversationHandler.END


def delete_project_handler(update, context):
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    projects = gsheets.get_all_projects()
    if not projects:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.")
        return ConversationHandler.END

    try:
        # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞
        project_number = extract_number_from_text(text)
        if project_number is None:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä, –∏—â–µ–º –ø–æ –∏–º–µ–Ω–∏
            project_name = text.strip()
            project = next((p for p in projects if p['name'] == project_name), None)
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            project_index = project_number - 1
            if 0 <= project_index < len(projects):
                project = projects[project_index]
            else:
                project = None

        if project:
            project_name = project['name']
            success, message = gsheets.delete_project(project_name)

            if success:
                update.message.reply_text(
                    f"‚úÖ {message}",
                    reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
                )
            else:
                update.message.reply_text(
                    f"‚ùå {message}",
                    reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
                )
        else:
            update.message.reply_text(
                "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:",
                reply_markup=create_numeric_keyboard([p['name'] for p in projects])
            )
            return GETTING_DELETE_PROJECT

    except ValueError:
        update.message.reply_text(
            "‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞.",
            reply_markup=create_numeric_keyboard([p['name'] for p in projects])
        )
        return GETTING_DELETE_PROJECT

    return ConversationHandler.END


def get_report_project(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    projects = gsheets.get_all_projects()
    if not projects:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.")
        return ConversationHandler.END

    try:
        # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞
        project_number = extract_number_from_text(text)
        if project_number is None:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä, –∏—â–µ–º –ø–æ –∏–º–µ–Ω–∏
            project_name = text.strip()
            project = next((p for p in projects if p['name'] == project_name), None)
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            project_index = project_number - 1
            if 0 <= project_index < len(projects):
                project = projects[project_index]
            else:
                project = None

        if project:
            project_name = project['name']

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –æ—Ç—á–µ—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É
            if '—Ç–∞–±–ª–∏—Ü' in update.message.text.lower() or '–æ—Ç–∫—Ä—ã—Ç—å' in update.message.text.lower():
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
                update.message.reply_text(
                    f"üìã –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–∞ '{project_name}':\n{project['url']}",
                    reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
                )
            else:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç
                success, report = gsheets.get_project_report(project_name)

                if success:
                    update.message.reply_text(
                        report,
                        reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
                    )
                else:
                    update.message.reply_text(
                        f"‚ùå {report}",
                        reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
                    )
        else:
            update.message.reply_text(
                "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:",
                reply_markup=create_numeric_keyboard([p['name'] for p in projects])
            )
            return GETTING_REPORT_PROJECT

    except ValueError:
        update.message.reply_text(
            "‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞.",
            reply_markup=create_numeric_keyboard([p['name'] for p in projects])
        )
        return GETTING_REPORT_PROJECT

    return ConversationHandler.END


def get_worker_report_project(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    projects = gsheets.get_all_projects()
    if not projects:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.")
        return ConversationHandler.END

    try:
        # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞
        project_number = extract_number_from_text(text)
        if project_number is None:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä, –∏—â–µ–º –ø–æ –∏–º–µ–Ω–∏
            project_name = text.strip()
            project = next((p for p in projects if p['name'] == project_name), None)
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            project_index = project_number - 1
            if 0 <= project_index < len(projects):
                project = projects[project_index]
            else:
                project = None

        if project:
            context.user_data['worker_report_project'] = project['name']

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
            workers = gsheets.get_all_workers_in_project(project['name'])

            if not workers:
                update.message.reply_text(
                    f"‚ùå –í –ø—Ä–æ–µ–∫—Ç–µ '{project['name']}' –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞—Ö.",
                    reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
                )
                return ConversationHandler.END

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞–º–∏
            reply_markup = create_numeric_keyboard(workers)
            workers_list = "\n".join([f"{i + 1}. {worker}" for i, worker in enumerate(workers)])

            update.message.reply_text(
                f"üìä –ü—Ä–æ–µ–∫—Ç: {project['name']}\n\n"
                f"üë∑ –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞:\n\n{workers_list}\n\n"
                f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–æ–º–µ—Ä–æ–º –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:",
                reply_markup=reply_markup
            )
            return GETTING_WORKER_NAME
        else:
            update.message.reply_text(
                "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:",
                reply_markup=create_numeric_keyboard([p['name'] for p in projects])
            )
            return GETTING_WORKER_REPORT_PROJECT

    except ValueError:
        update.message.reply_text(
            "‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞.",
            reply_markup=create_numeric_keyboard([p['name'] for p in projects])
        )
        return GETTING_WORKER_REPORT_PROJECT


def get_worker_name(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    project_name = context.user_data.get('worker_report_project')
    if not project_name:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –ø—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.",
            reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
        )
        return ConversationHandler.END

    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É
        worker_number = extract_number_from_text(text)
        if worker_number is None:
            worker_name = text.strip()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è
        else:
            workers = gsheets.get_all_workers_in_project(project_name)
            if 0 <= worker_number - 1 < len(workers):
                worker_name = workers[worker_number - 1]
            else:
                worker_name = text.strip()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è

        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É
        success, report = gsheets.get_worker_detailed_report(project_name, worker_name)

        if success:
            update.message.reply_text(
                report,
                reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
            )
        else:
            update.message.reply_text(
                f"‚ùå {report}",
                reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
            )

    except Exception as e:
        update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}",
            reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
        )

    return ConversationHandler.END


def view_project_data(update, context):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    projects = gsheets.get_all_projects()
    if not projects:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.")
        return ConversationHandler.END

    try:
        # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞
        project_number = extract_number_from_text(text)
        if project_number is None:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä, –∏—â–µ–º –ø–æ –∏–º–µ–Ω–∏
            project_name = text.strip()
            project = next((p for p in projects if p['name'] == project_name), None)
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            project_index = project_number - 1
            if 0 <= project_index < len(projects):
                project = projects[project_index]
            else:
                project = None

        if project:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
            update.message.reply_text(
                f"üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞: {project['name']}\n\n–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
                reply_markup=main_menu_keyboard(auth.is_admin(update.effective_user.id))
            )
        else:
            update.message.reply_text(
                "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:",
                reply_markup=create_numeric_keyboard([p['name'] for p in projects])
            )
            return VIEW_PROJECT_DATA

    except ValueError:
        update.message.reply_text(
            "‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞.",
            reply_markup=create_numeric_keyboard([p['name'] for p in projects])
        )
        return VIEW_PROJECT_DATA

    return ConversationHandler.END


def manage_users(update, context):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    user = update.effective_user
    text = update.message.text

    if not auth.is_admin(user.id):
        update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return ConversationHandler.END

    if text == 'üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞':
        users = gsheets.get_all_users()
        if not users:
            update.message.reply_text("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            return ConversationHandler.END

        users_list = "\n".join(
            ["ID: {} | @{} -> {}".format(u['user_id'], u['username'], u['full_name']) for u in users])

        update.message.reply_text(
            "üìã –¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n{}\n\n–í–≤–µ–¥–∏—Ç–µ user_id –∏–ª–∏ username –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è:".format(
                users_list),
            reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
        )
        return GETTING_RENAME_USER

    elif text == 'üë§ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /add_user @username",
            reply_markup=ReplyKeyboardMarkup([['üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
                                             resize_keyboard=True)
        )
        return ConversationHandler.END

    elif text == '‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /remove_user @username",
            reply_markup=ReplyKeyboardMarkup([['üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
                                             resize_keyboard=True)
        )
        return ConversationHandler.END

    elif text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    return ConversationHandler.END


def get_user_to_rename(update, context):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    user_identifier = text.strip()
    context.user_data['rename_user'] = user_identifier

    update.message.reply_text(
        "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º: {}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞:".format(user_identifier),
        reply_markup=ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
    )
    return GETTING_NEW_NAME


def rename_user_handler(update, context):
    """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    text = update.message.text

    if text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return back_to_main_menu(update, context)

    new_name = text.strip()
    user_identifier = context.user_data.get('rename_user')

    if auth.rename_user(user_identifier, new_name):
        update.message.reply_text(
            "‚úÖ –ú–æ–Ω—Ç–∞–∂–Ω–∏–∫ {} –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ '{}'\n–í—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–ø–∏—Å–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!".format(user_identifier, new_name),
            reply_markup=ReplyKeyboardMarkup([['üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
                                             resize_keyboard=True)
        )
    else:
        update.message.reply_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ {}".format(user_identifier),
            reply_markup=ReplyKeyboardMarkup([['üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'], ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
                                             resize_keyboard=True)
        )

    return ConversationHandler.END


# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
def add_user_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = update.effective_user

    if not auth.is_admin(user.id):
        update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_user @username")
        return

    username = context.args[0].lstrip('@')
    if auth.add_user_to_sheet(None, username, username):
        update.message.reply_text("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{} –¥–æ–±–∞–≤–ª–µ–Ω.".format(username))
    else:
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


def remove_user_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = update.effective_user

    if not auth.is_admin(user.id):
        update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    if not context.args:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /remove_user @username")
        return

    username = context.args[0].lstrip('@')
    if auth.remove_user_from_sheet(username):
        update.message.reply_text("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{} —É–¥–∞–ª–µ–Ω.".format(username))
    else:
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


def rename_user_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = update.effective_user

    if not auth.is_admin(user.id):
        update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    if len(context.args) < 2:
        update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /rename_user user_identifier –Ω–æ–≤–æ–µ_–∏–º—è")
        return

    user_identifier = context.args[0]
    new_name = ' '.join(context.args[1:])

    if auth.rename_user(user_identifier, new_name):
        update.message.reply_text("‚úÖ –ú–æ–Ω—Ç–∞–∂–Ω–∏–∫ {} –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ '{}'".format(user_identifier, new_name))
    else:
        update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞ {}".format(user_identifier))


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
def approve_data_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    user = update.effective_user

    if not auth.is_admin(user.id):
        update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    command = update.message.text
    if not command.startswith('/approve_'):
        return

    approval_id = command.replace('/approve_', '')
    pending_data = pending_approvals.get(approval_id)

    if not pending_data:
        update.message.reply_text("‚ùå –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª.")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–æ–µ–∫—Ç
    projects = gsheets.get_all_projects()
    if projects:
        active_project = projects[0]
        success = gsheets.add_work_record(
            active_project['spreadsheet_id'],
            pending_data['date'],
            pending_data['username'],
            "–ê–≤—Ç–æ-–æ–±—ä–µ–∫—Ç",
            pending_data['work_type'],
            pending_data['volume'],
            f"–ê–≤—Ç–æ-–¥–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑: {pending_data['text']}"
        )

        if success:
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            context.bot.send_message(
                pending_data['user_id'],
                f"‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É!\n"
                f"üîß {pending_data['work_type']} - {pending_data['volume']}"
            )
            update.message.reply_text("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")

            # –£–¥–∞–ª—è–µ–º –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö
            del pending_approvals[approval_id]
        else:
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")
    else:
        update.message.reply_text("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.")


def reject_data_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    user = update.effective_user

    if not auth.is_admin(user.id):
        update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    command = update.message.text
    if not command.startswith('/reject_'):
        return

    approval_id = command.replace('/reject_', '')
    pending_data = pending_approvals.get(approval_id)

    if pending_data:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.bot.send_message(
            pending_data['user_id'],
            "‚ùå –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        update.message.reply_text("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã.")

        # –£–¥–∞–ª—è–µ–º –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö
        del pending_approvals[approval_id]
    else:
        update.message.reply_text("‚ùå –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω.")


def cancel(update, context):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    user = update.effective_user
    update.message.reply_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
        reply_markup=main_menu_keyboard(auth.is_admin(user.id))
    )
    context.user_data.clear()
    return ConversationHandler.END


# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
def get_all_workers_in_project(project_name):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–Ω—Ç–∞–∂–Ω–∏–∫–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ gsheets_manager
        return gsheets.get_all_workers_in_project(project_name)
    except:
        return ["–ú–æ–Ω—Ç–∞–∂–Ω–∏–∫ 1", "–ú–æ–Ω—Ç–∞–∂–Ω–∏–∫ 2"]  # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è


def get_worker_detailed_report(project_name, worker_name):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ gsheets_manager
        return gsheets.get_worker_detailed_report(project_name, worker_name)
    except:
        return True, f"üìä –û—Ç—á–µ—Ç –ø–æ –º–æ–Ω—Ç–∞–∂–Ω–∏–∫—É {worker_name} –≤ –ø—Ä–æ–µ–∫—Ç–µ {project_name}\n\n–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"